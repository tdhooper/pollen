quantize

buckets = Math.pow(n, 2);

* create textures 
    bucketsBuffers = [input_width * input_height, buckets]
    dimensionBuffer = [3, buckets]
    boundryBuffer = [1, buckets]

* bucketsBuffers <= write pixels into first row
    vec2 uv = indexToUv(gl_FragCoord.x, sourceSize);
    gl_FragColor = texture(source, uv);

* find largest dimension for each occupied row
    * dimension is gl_FragCoord.x
    * for each pixel on [gl_FragCoord.y, source.x...]
        min(), max()
    gl_FragColor = vec4(minValue, maxValue, 0, 1);

    or 

    * for r, g, b
        * for each pixel on [gl_FragCoord.y, source.x...]
            min(), max()
    dimension, min, max = min/max r, g, b
    gl_FragColor = vec4(dimension, minValue, maxValue, 1);

* sort pixels in each occupied row
* find boundry index for each row
    * write into temp texture, maybe packed
* split
    * return parent row's pixels from boundry index
        * or before if you are parent 
* repeat sqrt(rows) times









